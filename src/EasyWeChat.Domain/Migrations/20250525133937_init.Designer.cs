// <auto-generated />
using System;
using EasyWeChat.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyWeChat.Domain.Migrations
{
    [DbContext(typeof(EasyWeChatDbContext))]
    [Migration("20250525133937_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasyWeChat.Domain.Entities.ApplyInfo", b =>
                {
                    b.Property<long>("ApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ApplyId"), 1L, 1);

                    b.Property<string>("ApplyMessage")
                        .HasColumnType("varchar(50)");

                    b.Property<long>("ApplyUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("ContactType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastApplyTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReceiveUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ApplyId");

                    b.ToTable("ApplyInfos");
                });

            modelBuilder.Entity("EasyWeChat.Domain.Entities.GroupInfo", b =>
                {
                    b.Property<long>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GroupId"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GroupNotice")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("GroupOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int>("JoinType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.ToTable("GroupInfos");
                });

            modelBuilder.Entity("EasyWeChat.Domain.Entities.UserContact", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<int>("ContanctType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ContactId");

                    b.ToTable("UserContacts");
                });

            modelBuilder.Entity("EasyWeChat.Domain.Entities.UserInfo", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"), 1L, 1);

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AreaName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("JoinType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
